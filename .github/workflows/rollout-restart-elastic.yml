name: Restart elasticsearch cluster

on:
  schedule:
    - cron: "0 20 * * *"
  workflow_dispatch:

jobs:
  restart-elastic-scw-dev:
    name: ðŸ”ƒ Restart elastic cluster on dev
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    env:
      ACME: acme
      APP_GROUP: judilibre
      APP_HOST: admin.dev-par1.judilibre.io
      APP_HOST_ALTER: admin.dev.judilibre.io
      APP_ID: judilibre-admin
      APP_NODES: 1
      APP_SCHEME: https
      APP_PORT: 443
      API_PORT: 8080
      DOCKER_USERNAME: opendatajustice
      ELASTIC_INDEX: judilibre_0
      ELASTIC_NODES: 3
      ELASTIC_MEM: 13000Mi
      ELASTIC_MEM_JVM: 6500m
      ELASTIC_SEARCH_PASSWORD: ${{ secrets.ELASTIC_SEARCH_PASSWORD }}
      ELASTIC_STORAGE_POLICY: DeleteOnScaledownOnly
      ELASTIC_STORAGE_SIZE: 60Gi
      HTTP_PASSWD: ${{ secrets.HTTP_PASSWD }}
      KUBE_INGRESS: nginx
      KUBE_NAMESPACE: judilibre-scw-dev-par1-dev
      KUBE_TYPE: k8s
      KUBE_ZONE: scw-dev-par1
      SCW_ZONE: fr-par-1
      SCW_KUBE_NODES: 1
      START_TIMEOUT: 240
    steps:
      - uses: actions/checkout@v1
      - name: extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF} | sed 's|^refs/heads/||;' | sed 's/[^a-zA-Z0-9]/-/g')"
        id: extract_branch
      - name: init deps
        run: ./scripts/init_deps.sh
        env:
          GIT_BRANCH: ${{ steps.extract_branch.outputs.branch }}
      - name: get version
        run: echo "##[set-output name=version;]$(./scripts/version.sh)"
        id: extract_version
      - name: kube prerequisites
        run: |
          mkdir -p ${HOME}/.kube
          cat k8s/kubeconfig.yaml | envsubst > ~/.kube/config
        env:
          KUBE_CA: ${{ secrets.KUBE_SCW_CA }}
          KUBE_NAME: ${{ secrets.KUBE_SCW_NAME }}
          KUBE_TOKEN: ${{ secrets.KUBE_SCW_TOKEN }}
          KUBE_URL: ${{ secrets.KUBE_SCW_URL }}
          KUBE_USER: ${{ secrets.KUBE_SCW_USER }}
      - name:  ðŸ”ƒ Rollout restart elasticsearch on remote cluster
        run: ./scripts/rollout_restart_elasticsearch.sh
        env:
          GIT_BRANCH: ${{ steps.extract_branch.outputs.branch }}
          VERSION: ${{ steps.extract_version.outputs.version }}
  restart-elastic-scw-prod-par1:
    name: ðŸ”ƒ Restart elastic cluster on dev
    if: github.ref == 'refs/heads/master' || github.event.schedule == '0 20 * * *'
    runs-on: ubuntu-latest
    env:
      ACME: acme
      APP_GROUP: judilibre
      APP_HOST: admin.prod-par1.judilibre.io
      APP_HOST_ALTER: admin.judilibre.io
      APP_ID: judilibre-admin
      APP_NODES: 1
      APP_SCHEME: https
      APP_PORT: 443
      API_PORT: 8080
      DOCKER_USERNAME: opendatajustice
      ELASTIC_INDEX: judilibre_0
      ELASTIC_NODES: 3
      ELASTIC_MEM: 13000Mi
      ELASTIC_MEM_JVM: 6500m
      ELASTIC_SEARCH_PASSWORD: ${{ secrets.ELASTIC_SEARCH_PASSWORD_PROD }}
      ELASTIC_STORAGE_POLICY: DeleteOnScaledownOnly
      ELASTIC_STORAGE_SIZE: 60Gi
      HTTP_PASSWD: ${{ secrets.HTTP_PASSWD_PROD }}
      KUBE_INGRESS: nginx
      KUBE_NAMESPACE: judilibre-scw-prod-par1-master
      KUBE_SERVICES_FORCE_UPDATE: ${{ secrets.KUBE_SERVICES_FORCE_UPDATE }}
      KUBE_TYPE: k8s
      KUBE_ZONE: scw-prod-par1
      SCW_ZONE: fr-par-1
      SCW_KUBE_NODES: 3
      START_TIMEOUT: 240
    steps:
      - uses: actions/checkout@v1
      - name: extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF} | sed 's|^refs/heads/||;' | sed 's/[^a-zA-Z0-9]/-/g')"
        id: extract_branch
      - name: init deps
        run: ./scripts/init_deps.sh
        env:
          GIT_BRANCH: ${{ steps.extract_branch.outputs.branch }}
      - name: get version
        run: echo "##[set-output name=version;]$(./scripts/version.sh)"
        id: extract_version
      - name: kube prerequisites
        run: |
          mkdir -p ${HOME}/.kube
          cat k8s/kubeconfig.yaml | envsubst > ~/.kube/config
        env:
          KUBE_CA: ${{ secrets.KUBE_SCW_CA_PROD_PAR1 }}
          KUBE_NAME: ${{ secrets.KUBE_SCW_NAME_PROD_PAR1 }}
          KUBE_TOKEN: ${{ secrets.KUBE_SCW_TOKEN_PROD_PAR1 }}
          KUBE_URL: ${{ secrets.KUBE_SCW_URL_PROD_PAR1 }}
          KUBE_USER: ${{ secrets.KUBE_SCW_USER_PROD_PAR1 }}
      - name:  ðŸ”ƒ Rollout restart elasticsearch on remote cluster
        run: ./scripts/rollout_restart_elasticsearch.sh
        env:
          GIT_BRANCH: ${{ steps.extract_branch.outputs.branch }}
          VERSION: ${{ steps.extract_version.outputs.version }}
  restart-elastic-scw-prod-par2:
    name: ðŸ”ƒ Restart elastic cluster on dev
    needs: restart-elastic-scw-prod-par1
    if: github.ref == 'refs/heads/master' || github.event.schedule == '0 20 * * *'
    runs-on: ubuntu-latest
    env:
      ACME: acme
      APP_GROUP: judilibre
      APP_HOST: admin.prod-par2.judilibre.io
      APP_HOST_ALTER: admin.judilibre.io
      APP_ID: judilibre-admin
      APP_NODES: 1
      APP_SCHEME: https
      APP_PORT: 443
      API_PORT: 8080
      DOCKER_USERNAME: opendatajustice
      ELASTIC_INDEX: judilibre_0
      ELASTIC_NODES: 3
      ELASTIC_MEM: 12288Mi
      ELASTIC_MEM_JVM: 6144m
      ELASTIC_SEARCH_PASSWORD: ${{ secrets.ELASTIC_SEARCH_PASSWORD_PROD }}
      ELASTIC_STORAGE_POLICY: DeleteOnScaledownOnly
      ELASTIC_STORAGE_SIZE: 20Gi
      HTTP_PASSWD: ${{ secrets.HTTP_PASSWD_PROD }}
      KUBE_INGRESS: nginx
      KUBE_NAMESPACE: judilibre-scw-prod-par2-master
      KUBE_SERVICES_FORCE_UPDATE: ${{ secrets.KUBE_SERVICES_FORCE_UPDATE }}
      KUBE_TYPE: k8s
      KUBE_ZONE: scw-prod-par2
      SCW_ZONE: fr-par-2
      SCW_KUBE_NODES: 3
      START_TIMEOUT: 240
    steps:
      - uses: actions/checkout@v1
      - name: extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF} | sed 's|^refs/heads/||;' | sed 's/[^a-zA-Z0-9]/-/g')"
        id: extract_branch
      - name: init deps
        run: ./scripts/init_deps.sh
        env:
          GIT_BRANCH: ${{ steps.extract_branch.outputs.branch }}
      - name: get version
        run: echo "##[set-output name=version;]$(./scripts/version.sh)"
        id: extract_version
      - name: kube prerequisites
        run: |
          mkdir -p ${HOME}/.kube
          cat k8s/kubeconfig.yaml | envsubst > ~/.kube/config
        env:
          KUBE_CA: ${{ secrets.KUBE_SCW_CA_PROD_PAR2 }}
          KUBE_NAME: ${{ secrets.KUBE_SCW_NAME_PROD_PAR2 }}
          KUBE_TOKEN: ${{ secrets.KUBE_SCW_TOKEN_PROD_PAR2 }}
          KUBE_URL: ${{ secrets.KUBE_SCW_URL_PROD_PAR2 }}
          KUBE_USER: ${{ secrets.KUBE_SCW_USER_PROD_PAR2 }}
      - name:  ðŸ”ƒ Rollout restart elasticsearch on remote cluster
        run: ./scripts/rollout_restart_elasticsearch.sh
        env:
          GIT_BRANCH: ${{ steps.extract_branch.outputs.branch }}
          VERSION: ${{ steps.extract_version.outputs.version }}
